version: '2'

services:

  zookeeper-base:
    container_name: zookeeper-base
    image: hyperledger/fabric-zookeeper:0.4
    restart: always
    environment:
      - ZOO_SERVERS=server.1=zookeeper1.dl4csr.org:2888:3888 server.2=zookeeper2.dl4csr.org:2888:3888 server.3=zookeeper3.dl4csr.org:2888:3888

  kafka-base:
    container_name: kafka.dl4csr.org
    image: hyperledger/fabric-kafka:0.4
    restart: always
    environment:
      - KAFKA_ZOOKEEPER_CONNECT=zookeeper1.dl4csr.org:2181 zookeeper2.dl4csr.org:2181 zookeeper3.dl4csr.org:2181
      - KAFKA_ADVERTISED_LISTENERS=PLAINTEXT://kafka.d4csr.org:9092
      - KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR=1
      - KAFKA_MESSAGE_MAX_BYTES=1048576
      - KAFKA_REPLICA_FETCH_MAX_BYTES=1048576
      - KAFKA_UNCLEAN_LEADER_ELECTION_ENABLE=false
      - KAFKA_LOG_RETENTION_MS=-1
      - KAFKA_MIN_INSYNC_REPLICAS=2
      - KAFKA_DEFAULT_REPLICATION_FACTOR=1

  peer-base:
    image: hyperledger/fabric-peer:1.4
    environment:
      - GODEBUG=netdns=go
      - CORE_VM_ENDPOINT=unix:///host/var/run/docker.sock
      - CORE_LOGGING_PEER=info
      - CORE_CHAINCODE_LOGGING_LEVEL=info
      - CORE_PEER_MSPCONFIGPATH=/var/hyperledger/msp
      - CORE_PEER_GOSSIP_USELEADERELECTION=true
      - CORE_PEER_GOSSIP_ORGLEADER=false
      - CORE_PEER_GOSSIP_SKIPHANDSHAKE=true
      - CORE_PEER_TLS_ENABLED=true
      - CORE_PEER_TLS_CERT_FILE=/var/hyperledger/tls/server.crt
      - CORE_PEER_TLS_KEY_FILE=/var/hyperledger/tls/server.key
      - CORE_PEER_TLS_ROOTCERT_FILE=/var/hyperledger/tls/ca.crt
      - CORE_VM_DOCKER_HOSTCONFIG_NETWORKMODE=deploy_dl4csr
      - CORE_LEDGER_STATE_STATEDATABASE=CouchDB
    working_dir: /opt/gopath/src/github.com/hyperledger/fabric
    command: peer node start